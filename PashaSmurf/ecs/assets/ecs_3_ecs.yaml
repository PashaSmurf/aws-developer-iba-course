AWSTemplateFormatVersion: "2010-09-09"
Description: Create ALB and target group
Parameters:
  TargetGroupName:
    Description: Your target group name
    Type: String
    Default: "alb-ecs-tg"

  ClusterName:
    Description: Your Cluster name
    Type: String
    Default: "MyFargateCluster"

Resources:
  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 30
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 15
      HealthyThresholdCount: 5
      UnhealthyThresholdCount: 3
      VpcId: !ImportValue CustomVpc
      Protocol: HTTP
      Port: 80
      Name: !Ref TargetGroupName
      TargetType: ip
      Matcher:
        HttpCode: "200"

  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ELB Security Group
      VpcId: !ImportValue CustomVpc
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  JavaContainerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ELB Security Group
      VpcId: !ImportValue CustomVpc
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ALBTargetGroup
      LoadBalancerArn: !Ref ALB
      Port: 80
      Protocol: HTTP

  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: application
      Scheme: internet-facing
      Subnets:
        - !ImportValue PublicSubnetA
        - !ImportValue PublicSubnetB
      SecurityGroups:
        - !GetAtt ALBSecurityGroup.GroupId

  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterSettings:
        - Name: containerInsights
          Value: enabled
      ClusterName: !Ref ClusterName
      CapacityProviders:
        - FARGATE
      DefaultCapacityProviderStrategy:
        - CapacityProvider: FARGATE
          Weight: 1

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ExecutionRoleArn: ecsTaskExecutionRole
      RequiresCompatibilities:
        - "FARGATE"
      NetworkMode: awsvpc
      ContainerDefinitions:
        - Name: java-hello-world
          Image: '250958575382.dkr.ecr.us-east-1.amazonaws.com/ecr-ecs:latest'
          Essential: true
          PortMappings:
            - ContainerPort: 8080
              Protocol: tcp
      Family: java-hello-world
      Cpu: 1 vCPU
      Memory: 2 GB

  ECSService:
    Type: AWS::ECS::Service
    DependsOn: ALBListener
    Properties:
      Cluster: !Ref ECSCluster
      DesiredCount: 2
      TaskDefinition: !Ref TaskDefinition
      NetworkConfiguration:
        AwsVpcConfiguration:
          SecurityGroups:
            - !GetAtt JavaContainerSecurityGroup.GroupId
          AssignPublicIp: DISABLED
          Subnets:
            - !ImportValue PrivateSubnetA
            - !ImportValue PrivateSubnetB
      LoadBalancers:
        - TargetGroupArn: !Ref ALBTargetGroup
          ContainerPort: 8080
          ContainerName: java-hello-world

Outputs:
  ECSTaskDefinition:
    Description: The created Task Definition.
    Value: !Ref TaskDefinition